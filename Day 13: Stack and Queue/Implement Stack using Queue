/* Using 2 Queues */

#include <queue>
class MyStack {
public:
    queue<int> q;
    queue<int> arr;
    MyStack() {
    }
    
    void push(int x) {
        while(!q.empty())
        {
            arr.push(q.front());
            q.pop();
        }
        q.push(x);
        while(!arr.empty())
        {
            q.push(arr.front());
            arr.pop();
        }
    }
    
    int pop() {
        int ans=q.front();
        q.pop();
        return ans;
    }
    
    int top() {
        return q.front();
    }
    
    bool empty() {
        if(q.empty())
            return true;
        else
            return false;
    }
};

/* Using 1 Queue */

#include <queue>
class MyStack {
public:
    queue<int> q;
    MyStack() {
    }
    
    void push(int x) {
        int s=q.size();
        q.push(x);
        for(int i=0;i<s;i++)
        {
            q.push(q.front());
            q.pop();
        }
    }
    
    int pop() {
        int ans=q.front();
        q.pop();
        return ans;
    }
    
    int top() {
        return q.front();
    }
    
    bool empty() {
        if(q.empty())
            return true;
        else
            return false;
    }
};
