/* 
     Reverse both the Linked List and add them. Now reverse the final linked list.
*/

class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        ListNode *ans=NULL,*prev=NULL;
        bool carry=false;
        while(l1 and l2)
        {
            int num=(l1->val)+(l2->val),r;
            if(carry)
                num+=1;
            if(num>9)
            {
                r=num%10;
                carry=true;
            }
            else
            {
                r=num;
                carry=false;
            }
            ListNode *node=new ListNode(r);
            if(ans==NULL)
            {
                ans=node;
                prev=ans;
            }
            else
            {
                prev->next=node;
                prev=node;
            }
            l1=l1->next;
            l2=l2->next;
        }
        while(l1)
        {
            int num=l1->val,r;
            if(carry)
                num+=1;
            if(num>9)
            {
                r=num%10;
                carry=true;
            }
            else
            {
                r=num;
                carry=false;
            }
            ListNode *node=new ListNode(r);
            prev->next=node;
            prev=node;
            l1=l1->next;
        }
        while(l2)
        {
            int num=l2->val,r;
            if(carry)
                num+=1;
            if(num>9)
            {
                r=num%10;
                carry=true;
            }
            else
            {
                r=num;
                carry=false;
            }
            ListNode *node=new ListNode(r);
            prev->next=node;
            prev=node;
            l2=l2->next;
        }
        if(carry)
        {
            int r=1;
            ListNode *node=new ListNode(r);
            prev->next=node;
            prev=node;
        }
        return ans;
    }
};
