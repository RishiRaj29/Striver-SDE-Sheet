/*

Let x be the repeating number and y be the missing number. Let S be the sum of all numbers till n and P be the sum of all squares of the number till n.

S=n*(n+1)/2.    P=(n*(n+1)*(2*n+1))/6.   Now let the sum of all numbers of the array be S' and sum of squares of the numbers in the array be P'.

So if we subtract S and S' then it will give us x-y. Similarly P-P' will give us x^2-y^2.

So the we have the first eqn x-y = S-S' = S1. The second eqn is x^2-y^2 = P-P' = P1.

If we simplify both the eqns then        x = (S1+(P1/S1))/2.              Y = x-S1.

*/

vector<int> Solution::repeatedNumber(const vector<int> &nums) {

    vector<int> res;
    
    long long int n=nums.size();
    
    long long int s1=(n*(n+1))/2;
    
    long long int p1=(n*(n+1)*(2*n+1))/6;
    
    long long int a,b;
    
    for(int i=0;i<n;i++)
    {
    
        s1-=(long long int)nums[i];
        
        p1-=(long long int)nums[i]*(long long int)nums[i];
        
    }
    
    a=(s1+(p1/s1))/2;
    
    b=a-s1;
    
    res.push_back(b);
    res.push_back(a);
    return res;
    
}
