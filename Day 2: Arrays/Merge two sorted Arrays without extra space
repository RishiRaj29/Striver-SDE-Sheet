// Solution->

/* 

Algorithm->

Initially take the gap as (m+n)/2;

Take as a pointer1 = 0 and pointer2 = gap.

Run a oop from pointer1 &  pointer2 to  m+n and whenever arr[pointer2]<arr[pointer1], just swap those.

After completion of the loop reduce the gap as gap=gap/2.

Repeat the process until gap>0.

*/

vector<int> ninjaAndSortedArrays(vector<int>& arr1, vector<int>& arr2, int m, int n) {

	// Write your code here.
    int k=m,l=0;
    for(l=n-1,k=arr1.size()-1;l>=0;l--,k--)
        arr1[k]=arr2[l];
    
    int i,gap=ceil((float)arr1.size()/2),j;
    
    while(gap>0)
    {
        for(i=0,j=gap;j<arr1.size();i++,j++)
        {
             if(arr1[j]<arr1[i])
                 swap(arr1[j],arr1[i]);
        }
        if(gap==1)
            gap=0;
        else
            gap=ceil((float)gap/2);
    }
    return arr1;
}
