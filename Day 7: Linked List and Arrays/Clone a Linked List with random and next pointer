// For in-depth understanding watch -> https://www.youtube.com/watch?v=4apaOcK586U

class Solution {
public:
    Node* copyRandomList(Node* head) {
        if(head==NULL)
            return NULL;
            
        Node *temp=head;
        
        while(temp) // Making the interconnections between the original and the new node 
        {
            Node *node=new Node(temp->val);
            node->next=temp->next;
            temp->next=node;
            temp=node->next;
        }
        
        Node *ans=head->next,*t1=head,*t2=ans;
        
        while(t2->next!=NULL) // Setting the random pointers of the new list according to the original list
        {
            if(t1->random==NULL)
                t2->random=NULL;
            else
                t2->random=t1->random->next;
                
            t1=t2->next;
            t2=t2->next->next;
        }
        
        if(t1->random==NULL)
            t2->random=NULL;
        else
            t2->random=t1->random->next;
        t1=ans->next,t2=ans;
        
        Node *t=head;
        
        while(t1) // Now disconnecting the original list from the new list
        {
            t->next=t2->next;
            t=t1;
            t2->next=t1->next;
            t2=t1->next;
            t1=t1->next->next;
        }
        
        t->next=t1;
        t2->next=t1;
        return ans;
    }
};
