class Solution {
private:

    void fun(int ind,int target,vector<int> &candidates,vector<int> &ds,set<vector<int>> &ans)
    {
    
        if(ind>=candidates.size() or target==0)
        {
            if(target==0)
                ans.insert(ds);
            return;
        }
        
        if(target<0)
            return;
            
        ds.push_back(candidates[ind]);
        
        fun(ind+1,target-candidates[ind],candidates,ds,ans);
        
        ds.pop_back();
        
        while(ind+1<candidates.size() and candidates[ind]==candidates[ind+1])
            ind++;
            
        fun(ind+1,target,candidates,ds,ans);
    }
    
public:

    vector<vector<int>> combinationSum2(vector<int>& candidates, int target)     {
    
        sort(candidates.begin(),candidates.end());
        
        set<vector<int>> ans;
        
        vector<vector<int>> res;
        
        vector<int> ds;
        
        fun(0,target,candidates,ds,ans);
        
        for(auto i:ans)
            res.push_back(i);
        return res;
    }
    
};
